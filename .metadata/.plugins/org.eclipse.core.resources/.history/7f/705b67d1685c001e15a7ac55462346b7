package com.cts.customer.service;


import java.time.format.DateTimeFormatter;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cts.customer.model.CreateCustomerResponse;
import com.cts.customer.model.Customer;
import com.cts.customer.repository.CustomerRepository;

@Service
public abstract class CustomerServiceImpl implements CustomerService{
	
	@Autowired
	private CustomerRepository customerRepository;
	
	public Long generateCustomerId(Customer customer) {
      
        String panDigits = customer.getPan().substring(5, 9);
        
        String dobYear = customer.getDateOfBirth().format(DateTimeFormatter.ofPattern("yy"));
        String dobMonth = customer.getDateOfBirth().format(DateTimeFormatter.ofPattern("MM"));
        Long yearMonthSum = Long.parseLong(dobYear)+Long.parseLong(dobMonth);

        String combinedIdString = yearMonthSum+panDigits + dobYear;
        Long generatedCustomerId = Long.parseLong(combinedIdString);

        return generatedCustomerId;
    }

	public CreateCustomerResponse createCustomer(Customer customer) {
		if (customer.getCustomerName() == null || customer.getPassword() == null ||
	            customer.getDateOfBirth() == null || customer.getPan() == null ||
	            customer.getAddress() == null) {
	            return new CreateCustomerResponse(null, "All fields must be provided");
	        }
        try {

        	customer.setCustomerId(generateCustomerId(customer));
        	Customer createdCustomer = customerRepository.save(customer);
        	Long customerId = createdCustomer.getCustomerId(); 
            String message = "Customer created successfully";
            return new CreateCustomerResponse(customerId, message);
        } catch (Exception e) {
           
            return new CreateCustomerResponse(null, "Error creating customer");
        }
    }

	
		
}
