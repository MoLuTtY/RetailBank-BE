package com.cts.transaction.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.support.DefaultTransactionDefinition;

import com.cts.transaction.model.CreateTransactionRequest;
import com.cts.transaction.model.Transaction;
import com.cts.transaction.model.TransactionStatus;
import com.cts.transaction.repository.TransactionRepository;

@Service
public class TransactionServiceImpl implements TransactionService{
	
	@Autowired
	private TransactionRepository transactionRepository;
	
	@Autowired
	private PlatformTransactionManager transactionManager;

	@Override
	public TransactionStatus deposit(CreateTransactionRequest transaction) {
		Transaction transactionObj = new Transaction();
		transactionObj.setAccountId(transaction.getAccountId());
		transactionObj.setTransactionDate(transaction.getTransactionDate());
		transactionObj.setSourceAccountNo(transaction.getSourceAccountNo());
		transactionObj.setSourceAccountType(transaction.getSourceAccountType());
		transactionObj.setTargetAccountNo(transaction.getTargetAccountNo());
		transactionObj.setTransferAmount(transaction.getTransferAmount());
		transactionObj.setWithdrawalAmount(transaction.getWithdrawalAmount());
		transactionObj.setDepositAmount(transaction.getDepositAmount());
		transactionObj.setClosingBalance(transaction.getClosingBalance());
		transactionRepository.save(transactionObj);
		
		TransactionStatus status = new TransactionStatus();
		status.setTransactionId(transactionObj.getTransactionId());
		status.setStatus("Deposit successful");
		
		return status;
		
	}

	@Override
	public void deleteTransactions(Long accountNo) {
		Try {
		TransactionStatus status = transactionManager.getTransaction(new DefaultTransactionDefinition());
        List<Transaction> transactions = transactionRepository.findAll();
        for(Transaction transaction : transactions ) {
        	Long transactionAccountNo = transaction.getSourceAccountNo();
        	System.out.println(transaction);
        	if(transactionAccountNo == accountNo) {
        		transactionRepository.delete(transaction);
        		 
        		
        	}       	
        }
        transactionManager.commit(status);
		}
	}

}
